1：
# 本来应该是提供一些物件的接口供agent查询或感知，然后再转化成这种自然语言描述。
# 比如胡桃本身有一个位置属性，在往生堂，就应该感知不到咖啡店那边的信息。
# 但总的来说，决策还是基于自然语言去做，因而可以这样模拟。
# 拒绝回答和行动的能力同样重要。
# 可以拆分成:xx事件发生,然后根据胡桃的状态和位置判断逻辑 -> 自然语言描述
# 比如：
# 咖啡店前台信息传来：hadi点了一杯拿铁,胡桃正在往生堂 -> 不触发，返回胡桃没感觉到
# hadi在往生堂门口向胡桃打招呼，胡桃在往生堂旁边的咖啡店 -> 触发并生成描述：胡桃听到了hadi在打招呼，看到了hadi在往生堂门口。
# 应该在perception处理，等待重构
EVENTS_LIST = [
    "胡桃看到了hadi在往生堂门口,听到了hadi在打招呼。",
    "胡桃收到璃月管委会的消息,内容为：往生堂第七十七代堂主，您好。近来璃月要举行一场特别的送别之仪，请您着手策划。",
    "胡桃从咖啡店前台信息了解到，hadi点了一杯拿铁。",
    "胡桃听到自己的闹钟响了，查看后发现备注为：记得看看璃月的历史书！"
]

2：
知识应该是先验的，需要加进去直接加进去，放到那个初始hutao里，没有大量世界观知识就不可能有好的对话效果
每次新加一次知识就新加一次这样的文件。
注意，知识这块可以设置一个分块的结构，第一步检索的是一个知识总结，然后连接到其子知识的文件再进一步检索：
有三个好处，一是只要检索到子知识，就能获取和其相关知识的总结；而是提高检索效率；三是减少单个知识文件长度，减少维护成本。

记忆呢？好像可以用一样的结构，但是记忆不像知识那样语义连贯，因而要考虑粒度问题：
可以先实现交互完就进行这样一个总结的结构，每次新对话都开一个新文件。

3.
画图
重构一些数据流
已实现部分的文档撰写，可以把值得一提写知乎，顺带提升一下代码健壮性,加一些单元测试

4、
其他：
想法把记忆接口交给agent自己用，这样的话可以纠错，然后修正自己的记忆